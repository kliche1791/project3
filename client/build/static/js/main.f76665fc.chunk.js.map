{"version":3,"sources":["images/Reddit.jpg","components/Jumbotron/index.js","utils/API.js","components/Grid/index.js","components/List/index.js","components/Form/index.js","pages/Startscrape.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Jumbotron","API","require","getArticles","console","log","axios","get","getArticle","id","deleteArticle","delete","saveArticle","articleData","post","Container","_ref","fluid","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","List","ListItem","Input","props","Object","assign","FormBtn","style","float","marginBottom","Startscrape","state","title","articles","searchCriteria","loadArticles","then","res","_this","setState","data","catch","err","handleInputChange","event","_event$target","target","name","value","defineProperty","handleFormSubmit","preventDefault","alert","this","onChange","width","placeholder","disabled","onClick","length","article","key","_id","href","link","rel","Component","App","react_router_dom","src","logo","alt","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f76665fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Reddit.e074d0d2.jpg\";","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{\n        height: 180,\n        clear: \"both\",\n        paddingTop: 70,\n        color: \"#1dc8cd\",\n        textAlign: \"center\"\n      }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import axios from \"axios\";\n// var express = require(\"express\");\nvar cheerio = require(\"cheerio\");\n// Initialize Express\n// var app = express();\n\nexport default {\n  // Gets all articles\n  getArticles: function() {\n    console.log(\"getArticles is being called - inside API.js\");\n    return axios.get(\"/api/articles\");\n  },\n  // Gets the article with the given id\n  getArticle: function(id) {\n    return axios.get(\"/api/articles/\" + id);\n  },\n  // Deletes the article with the given id\n  deleteArticle: function(id) {\n    return axios.delete(\"/api/articles/\" + id);\n  },\n  // Saves a article to the database\n  saveArticle: function(articleData) {\n    console.log(\"saaveArticle is being called - inside API.js\");\n    // Write the logic for scrape ?\n    return axios.post(\"/api/articles\", articleData);\n  }\n};\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React, { Component } from \"react\";\n// import { Linking } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport \"./Startscrape.css\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nclass Startscrape extends Component {\n  state = {\n    title: \"\",\n    articles: [],\n    searchCriteria: \"\"\n  };\n\n  componentDidMount() {\n    this.loadArticles();\n  }\n\n  loadArticles = () => {\n    API.getArticles()\n      .then(res =>\n        this.setState({\n          articles: res.data,\n          title: \"\",\n          searchCriteria: \"\"\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteArticle = id => {\n    API.deleteArticle(id)\n      .then(res => this.loadArticles())\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.searchCriteria) {\n      alert(\"A search topic was submitted: \" + this.state.searchCriteria);\n      API.saveArticle({\n        title: this.state.searchCriteria\n      })\n        .then(res => this.loadArticles())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            {/* <Jumbotron> */}\n            <h1 className=\"mytitle\">Explore the best of MyNewsNow</h1>\n            {/* </Jumbotron> */}\n            <form>\n              <div>\n                <Input\n                  value={this.state.searchCriteria}\n                  onChange={this.handleInputChange}\n                  name=\"searchCriteria\"\n                  style={{ width: \"70%\" }}\n                  placeholder=\"Enter the search topic (Required)\"\n                />\n                {/* <Input\n                value={this.state.author}\n                onChange={this.handleInputChange}\n                name=\"author\"\n                placeholder=\"Author (required)\"\n              />\n              <TextArea\n                value={this.state.synopsis}\n                onChange={this.handleInputChange}\n                name=\"synopsis\"\n                placeholder=\"Synopsis (Optional)\"\n              /> */}\n                <FormBtn\n                  className=\"searchBtn\"\n                  disabled={!this.state.searchCriteria}\n                  onClick={this.handleFormSubmit}\n                >\n                  Submit Search\n                </FormBtn>\n              </div>\n            </form>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-4\">\n            <h1 className=\"mytitle\">Search from Washington Post</h1>\n          </Col>\n          <Col size=\"md-4\">\n            <h1 className=\"mytitle\">Search from New York Times</h1>\n          </Col>\n          <Col size=\"md-4\">\n            <h1 className=\"mytitle\">Search from Reddit</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-4\">\n            {/* Need to write logic for looping the database and displaying the articles resulted from the search --  */}\n            {/* <Col size=\"md-6 sm-12\"> */}\n            <div className=\"scrollable\">\n              <h1>News from Washington Post</h1>\n              <h1>News from Washington Post</h1>\n              <h1>News from Washington Post</h1>\n              <h1>News from Washington Post</h1>\n              <h1>News from Washington Post</h1>\n              <h1>News from Washington Post</h1>\n              <h1>News from Washington Post</h1>\n              <h1>News from Washington Post</h1>\n            </div>\n          </Col>\n          <Col size=\"md-4\">\n            {/* Need to write logic for looping the database and displaying the articles resulted from the search --  */}\n            {/* <Col size=\"md-6 sm-12\"> */}\n            <div className=\"scrollable\">\n              {this.state.articles.length ? (\n                <List>\n                  {this.state.articles.map(article => (\n                    <ListItem key={article._id}>\n                      {/* <Link to={\"/articles/\" + article._id}> */}\n                      <strong>\n                        {article.title}\n                        {<p></p>}\n                        {\n                          <a\n                            href={article.link}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            {article.link}{\" \"}\n                          </a>\n                        }\n                      </strong>\n                      {/* </Link> */}\n                      {/* <DeleteBtn onClick={() => this.deleteBook(book._id)} /> */}\n                    </ListItem>\n                  ))}\n                </List>\n              ) : (\n                <h3>No Results to Display</h3>\n              )}\n            </div>\n          </Col>\n          <Col size=\"md-4\">\n            {/* Need to write logic for looping the database and displaying the articles resulted from the search --  */}\n            {/* <Col size=\"md-6 sm-12\"> */}\n            <div className=\"scrollable\">\n              {this.state.articles.length ? (\n                <List>\n                  {this.state.articles.map(article => (\n                    <ListItem key={article._id}>\n                      {/* <Link to={\"/articles/\" + article._id}> */}\n                      <strong>\n                        {article.title}\n                        {<p></p>}\n                        {\n                          <a\n                            href={article.link}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            {article.link}{\" \"}\n                          </a>\n                        }\n                      </strong>\n                      {/* </Link> */}\n                      {/* <DeleteBtn onClick={() => this.deleteBook(book._id)} /> */}\n                    </ListItem>\n                  ))}\n                </List>\n              ) : (\n                <h3>No Results to Display</h3>\n              )}\n            </div>\n          </Col>\n\n          {/*  {this.state.articles.length ? (\n              <List>\n                {this.state.books.map(book => (\n                  <ListItem key={book._id}>\n                    <Link to={\"/books/\" + book._id}>\n                      <strong>\n                        {book.title} by {book.author}\n                      </strong>\n                    </Link>\n                    <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col> */}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Startscrape;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport logo from \"./images/Reddit.jpg\";\nimport \"./App.css\";\n// import Scrape from \"./scrape\";\nimport Startscrape from \"./pages/Startscrape\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h2>Welcome to MyNewsNow</h2>\n          </div>\n          <Switch>\n            <Route exact path=\"/\" component={Startscrape} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}